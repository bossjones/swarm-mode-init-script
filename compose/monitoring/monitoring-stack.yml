version: '3'

services:
  influx:
    image: influxdb
    volumes:
      - influx:/var/lib/influxdb
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana
    ports:
      - 0.0.0.0:3000:3000
    volumes:
      - grafana:/var/lib/grafana
    depends_on:
      - influx
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - "8081:8080"
    hostname: '{{.Node.ID}}'
    command: -logtostderr -docker_only -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influx:8086
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - influx
    deploy:
      mode: global

  prometheus:
      image: prom/prometheus:latest
      ports:
        - "9090:9090"
      volumes:
            - /var/dockerdata/prometheus/data:/prometheus
            - /var/dockerdata/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - /var/dockerdata/prometheus/rules:/etc/prometheus-rules
      command: "-config.file=/etc/prometheus/prometheus.yml -alertmanager.url http://alertmanager:9093 -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles"
      labels:
        com.docker.stack.namespace: "monitoring"
        com.docker.service.name: "prometheus"
      deploy:
        mode: replicated
        replicas: 1
        update_config:
            parallelism: 1
            delay: 60s

  node-exporter:
    image: basi/node-exporter:v0.1.1
    ports:
        - "9100:9100"
    environment:
        - HOST_HOSTNAME=/etc/hostname
    volumes:
        - /proc:/host/proc
        - /sys:/host/sys
        - /:/rootfs
        - /etc/hostname:/etc/hostname
    command: [ -collector.procfs=/host/proc,-collector.sysfs=/host/proc,-collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)",-collector.textfile.directory=/etc/node-exporter/]
    labels:
        com.docker.stack.namespace: "monitoring"
        com.docker.service.name: "node-exporter"
    deploy:
        mode: global
        update_config:
            parallelism: 1
            delay: 60s

    alertmanager:
        image: prom/alertmanager
        ports:
            - "9093:9093"
        volumes:
            - /var/dockerdata/alertmanager/alertmanagerconfig.yml:/etc/alertmanager/alertmanagerconfig.yml
            - /var/dockerdata/alertmanager/data:/etc/alertmanager/data
        command: [-config.file=/etc/alertmanager/alertmanagerconfig.yml,-storage.path=/alertmanager/data]
        labels:
            com.docker.stack.namespace: "monitoring"
            com.docker.service.name: "alertmanager"
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: on-failure
                max_attempts: 5

volumes:
  influx:
    driver: local
  grafana:
    driver: local
